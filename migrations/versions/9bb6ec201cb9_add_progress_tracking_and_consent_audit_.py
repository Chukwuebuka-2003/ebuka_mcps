"""Add progress tracking and consent audit models

Revision ID: 9bb6ec201cb9
Revises: add_progress_tracking
Create Date: 2025-10-24 04:57:03.707892

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9bb6ec201cb9'
down_revision: Union[str, Sequence[str], None] = 'add_progress_tracking'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('consent_audit_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('old_consent_level', sa.String(length=50), nullable=True),
    sa.Column('new_consent_level', sa.String(length=50), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('subject', sa.String(length=100), nullable=False),
    sa.Column('topic', sa.String(length=200), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('session_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('performance_score', sa.Float(), nullable=True),
    sa.Column('questions_asked', sa.Integer(), nullable=True),
    sa.Column('difficulty_level', sa.Integer(), nullable=True),
    sa.Column('session_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('milestones',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('milestone_type', sa.String(length=50), nullable=False),
    sa.Column('subject', sa.String(length=100), nullable=False),
    sa.Column('topic', sa.String(length=200), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('achieved_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('milestone_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('users', sa.Column('consent_level', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('data_retention_days', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('consent_granted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('last_consent_update', sa.DateTime(timezone=True), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'last_consent_update')
    op.drop_column('users', 'consent_granted_at')
    op.drop_column('users', 'data_retention_days')
    op.drop_column('users', 'consent_level')
    op.drop_table('milestones')
    op.drop_table('learning_sessions')
    op.drop_table('consent_audit_log')
    # ### end Alembic commands ###
